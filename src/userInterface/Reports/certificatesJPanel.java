/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Reports;

import Business.EcoSystem;
import javax.swing.JPanel;
import Business.Analytics.CertificateAnalytics;
import Business.Network.Network;
import java.util.ArrayList;
import Business.WorkQueue.BudgetWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author imperio2494
 */
public class certificatesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form certificatesTable
     */
    private EcoSystem system;
    private JPanel userProcessContainer;
    public certificatesJPanel(JPanel userProcessContainer,EcoSystem system) {
        initComponents();
        this.system=system;
        this.userProcessContainer=userProcessContainer;
        populateNetworkCB();
        populateCertificateTable();
    }

    private void populateNetworkCB(){
        networkCB.removeAllItems();
        for(Network n:system.getNetworkList())
        {networkCB.addItem(n.getName().toString());}
        
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        certificateTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkCB = new javax.swing.JComboBox<>();

        certificateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "OranizationCertificateId", "WorkRequestID", "messsage", "Organization", "requested Budget", "Allocated Budget", "Budget Spent "
            }
        ));
        certificateTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(certificateTable);

        jLabel1.setText("Network : ");

        networkCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(networkCB, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(networkCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
    }// </editor-fold>//GEN-END:initComponents
    public void populateCertificateTable( ){
        ArrayList<BudgetWorkRequest> requests=(new CertificateAnalytics(system)).getCertificates(networkCB.getSelectedItem().toString());
        DefaultTableModel model = (DefaultTableModel) certificateTable.getModel();
        
        
        model.setRowCount(0);
        for (WorkRequest request : requests){
            Object[] row = new Object[7];
            row[0] = request.getCertificate().getSenderOrganization().getOrgCertificateId();
            row[1] = request.getCertificate().getCertificateWorkRequestId();
            row[2] = request.getMessage();
            row[3] = request.getCertificate().getSenderOrganization();
            Integer aa = ((BudgetWorkRequest) request).getAllocatedBudgetRequest();
            row[4] = Integer.toString(((BudgetWorkRequest) request).getTotalBudgetRequest());
            row[5] = Integer.toString(((BudgetWorkRequest) request).getAllocatedBudgetRequest());
            row[6] = Integer.toString(((BudgetWorkRequest) request).getBudgetSpent());
            
                model.addRow(row);
            }
    
    
    }
    private void networkCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkCBActionPerformed
        //         TODO add your handling code here:
        try{
            
            populateCertificateTable();
            
            
            
            
            }
        
        catch(Exception e){
            //     populateEmployeeCountGraph(networkCB.getSelectedItem().toString());
        }
        finally{}

    }//GEN-LAST:event_networkCBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable certificateTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> networkCB;
    // End of variables declaration//GEN-END:variables
}
